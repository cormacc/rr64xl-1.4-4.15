RocketRAID 640L/642L/644L/644LS SATA Controller Linux Open Source Driver
Copyright (C) 2016 HighPoint Technologies, Inc. All rights reserved.

1. Overview
2. Build the driver as a kernel module
3. Revision History
4. Technical support and service

#############################################################################
1. Overview
#############################################################################

  This package contains Linux driver code for HighPoint RocketRAID 640L/642L/644L
  /644LS SATA controller. You can use it to build the driver module for custom
  Linux kernels.

  NO WARRANTY

  THE DRIVER SOURCE CODE HIGHPOINT PROVIDED IS FREE OF CHARGE, AND THERE IS
  NO WARRANTY FOR THE PROGRAM. THERE ARE NO RESTRICTIONS ON THE USE OF THIS
  FREE SOURCE CODE. HIGHPOINT DOES NOT PROVIDE ANY TECHNICAL SUPPORT IF THE
  CODE HAS BEEN CHANGED FROM ORIGINAL SOURCE CODE.

  LIMITATION OF LIABILITY

  IN NO EVENT WILL HIGHPOINT BE LIABLE FOR DIRECT, INDIRECT, SPECIAL,
  INCIDENTAL, OR CONSEQUENTIAL DAMAGES ARISING OUT OF THE USE OF OR
  INABILITY TO USE THIS PRODUCT OR DOCUMENTATION, EVEN IF ADVISED OF THE
  POSSIBILITY OF SUCH DAMAGES. IN PARTICULAR, HIGHPOINT SHALL NOT HAVE
  LIABILITY FOR ANY HARDWARE, SOFTWARE, OR DATA STORED USED WITH THE
  PRODUCT, INCLUDING THE COSTS OF REPAIRING, REPLACING, OR RECOVERING
  SUCH HARDWARE, OR DATA.


#############################################################################
2. Build the driver as a kernel module
#############################################################################

  NOTE: The latest tested kernel version: 4.7.2.
  
  1) Install kernel build tools (gcc, binutils, make, etc.)
  
  2) Setup the kernel source/headers
  
     To build driver modules for a specific kernel, you shall use same 
     configuration for the kernel and the driver. Otherwise, the driver may 
     be unable to load, or behave abnormally.
     
     - For Linux kernel 2.6 and 3.* and 4.*-
     
     On most distributions based on kernel 2.6 and 3.*, an exploded source tree is not
     required to build a driver against the currently in-use kernel. As long
     as the system has kernel headers setup under /lib/modules/`uname -r`/build,
     you can simply run "make" to build the driver.

     If you want to build the driver against a custom kernel source, you must
     setup the kernel source manually and run "make" under kernel source tree
     to setup kernel headers.

     - For Linux kernel 2.4 -
     
     You need a full kernel source tree to build the driver. If you are building
     a driver for the currently in-use kernel, the kernel source should match
     the version of the running kernel. In addition, you must obtain the config
     file for the running kernel:
     
        For Red Hat or Fedora Linux, you can find the stock kernel config files
        under {kernel-source-dir}/configs, named kernel-*.config. Select the one
        matches your hardware and copy it to {kernel-source-dir}/.config.
        
        For SuSE Linux, the config files for current kernel is under /boot dir
        so you can the kernel source by
        
            # cd /usr/src/linux-{kernel-version}.SuSE
            # cp /boot/vmlinuz.config .config
            # cp /boot/vmlinuz.version.h include/linux/version.h
            # cp /boot/vmlinuz.autoconf.h include/linux/autoconf.h

        For other distributions please refer to the distribution documents to 
        obtain the config file.
        
        If you are building a custom kernel and a driver, you can setup the kernel
        config by yourself, using "make config" or "make menuconfig" commands
        under kernel source directory.
        
     Once the kernel config file is ready, run following commands under kernel
     source directory to setup kernel headers:
     
            # make oldconfig
            # make dep
        
     On some Red Hat versions, {kernel-source-dir}/include/linux/modversions.h
     may be incorrect after "make dep", you need check if there is a line 
     "#include <linux/rhconfig.h>" before "#include <linux/modsetver.h>" in that
     file. If not, please add the line manually.

  3) Build the driver
  
     After you have configured the kernel source/headers you can build the driver
     by following commands (assume you have extracted the driver source under
     directory rr64xl-linux-src-1.xx):

        # cd rr64xl-linux-src-v1.xx/product/rr64xl/linux/
        # make
        
     You can append below options to "make" command:
     
        KERNELDIR=...
           Specify kernel source directory. If not specified the driver will
           use /lib/modules/{kernel-version}/build/ as the default location.
           This option is needed if you have a manually configured kernel
           source tree.
     
        CROSS_COMPILE=...
           Specify cross compiler prefix.
           
        ARCH=...
           Specify target system machine architecture.
           Currently only i386 and x86_64 is supported.

  4) Install/upgrade the driver
  
     If you are building driver for currently in-use kernel you can use
     "make install" to install or upgrade the driver:

        # cd rr64xl-linux-src-v1.xx/product/rr64xl/linux/
        # make install
        
     The KERNELDIR=... parameter may be required, e.g.
     
        # make install KERNELDIR=/usr/src/linux-2.6

     "make install" command will copy the driver module to the directory
     /lib/modules/`uname -r`/kernel/drivers/scsi, and update the initrd file
     if it contains an old version driver.
        
     If your system is installed on the controller, a reboot is required
     to make the new driver take effect.
     
     Please note "make install" may not work on some distributions. In that
     case you have to install the driver manually.
     
     After the driver is installed, it can be loaded manually by

        # modprobe rr640l
        
     To load the driver automatically during system startup, you can either
     put it into initrd file or configure a /etc/rc.d script to load it.
        
     
#############################################################################
3. Revision History
#############################################################################

   v1.4.0 09/20/2016
     * Support Kernel 4.7.x.
     * Increase RAID1 rebuild speed.

   v1.3.9 03/07/2015
     * Support WebGUI via SG_IO interface for kernel not support SCSI_PROC_FS.

   v1.3.8 02/10/2015
     * Support linux kernel 3.17.3.

   v1.3.7 12/27/2013
     * Add support READ DMA EXT command.
     * Fix return value of IDENTIFY command.

   v1.3.5 09/27/2013
     * Fix the wrong ATA return descriptor by SAT interface.

   v1.3.1 08/14/2013
     * Support linux kernel 3.10.

   v1.3 03/25/2013
     * Support linux kernel 3.8.3.
     * Support RS5345 enclosure.
     * Support EJ340 enclosure.

   v1.2 12/07/2012
     * Support linux kernel 3.6.0.
     * Support RR644LS SATA controller.
     * Support RS5315 enclosure.
     * Fix stablity issue when connect Silicon Image Port Multiplier 3826.

   v1.1.12.0911  09/11/2012
     * Support RR642L SATA controller.

   v1.0.12.0319 03/19/2012
     * Support RR644L SATA controller.

   v1.0.12.0229 02/29/2012
     * First release.

        
#############################################################################
4. Technical support and service
#############################################################################

  If you have questions about installing or using your HighPoint product,
  check the user's guide or readme file first, and you will find answers to
  most of your questions here. If you need further assistance, please
  contact us. We offer the following support and information services:

  1)  The HighPoint Web Site provides information on software upgrades,
      answers to common questions, and other topics. The Web Site is
      available from Internet 24 hours a day, 7 days a week, at
      http://www.highpoint-tech.com.

  2)  For technical support, send e-mail to support@highpoint-tech.com

  NOTE: Before you send an e-mail, please visit our Web Site
        (http://www.highpoint-tech.com) to check if there is a new or 
        updated device driver for your system.
